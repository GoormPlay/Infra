# Default values for loki-stack
# This is a YAML-formatted file.

# Global settings
global:
  namespace: observability

# Loki configuration
loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: "2.9.0"
    pullPolicy: IfNotPresent
  
  # Service configuration
  service:
    type: ClusterIP
    port: 3100
    targetPort: 3100
    name: loki
    # Internal cluster address: loki.observability.svc.cluster.local:3100
  
  # Loki server configuration
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
    
    # Storage configuration
    storage:
      # Retention period as specified in monitoring design document
      retention_period: "7d"
      
    # Ingester configuration
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      max_chunk_age: 1h
      chunk_target_size: 1048576
      chunk_encoding: snappy
    
    # Schema configuration
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    # Storage configuration
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
    
    # Limits configuration
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 10
      ingestion_burst_size_mb: 20
      max_streams_per_user: 10000
      max_line_size: 256000
  
  # Resource configuration
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  
  # Persistence configuration
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce

# Fluent Bit configuration
fluentbit:
  enabled: true
  image:
    repository: fluent/fluent-bit
    tag: "2.2.0"
    pullPolicy: IfNotPresent
  
  # DaemonSet configuration
  daemonset:
    enabled: true
  
  # Service Account
  serviceAccount:
    create: true
    name: fluent-bit
  
  # RBAC configuration
  rbac:
    create: true
  
  # Fluent Bit configuration
  config:
    # Service configuration
    service:
      flush: 1
      log_level: info
      daemon: "off"
      parsers_file: parsers.conf
      http_server: "On"
      http_listen: "0.0.0.0"
      http_port: 2020
    
    # Input configuration - collect container logs
    inputs:
      - name: tail
        path: /var/log/containers/*.log
        parser: docker
        tag: kube.*
        refresh_interval: 5
        mem_buf_limit: 50MB
        skip_long_lines: "On"
        db: /var/log/flb_kube.db
        db.sync: "Normal"
    
    # Filter configuration
    filters:
      # Kubernetes metadata enrichment
      - name: kubernetes
        match: kube.*
        kube_url: https://kubernetes.default.svc:443
        kube_ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        kube_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kube_tag_prefix: kube.var.log.containers.
        merge_log: "On"
        merge_log_key: log_processed
        k8s_logging_parser: "On"
        k8s_logging_exclude: "Off"
        annotations: "Off"
        labels: "On"
      
      # JSON parsing for structured logs
      - name: parser
        match: kube.*
        key_name: log
        parser: json
        reserve_data: "On"
        preserve_key: "On"
      
      # Allow all logs (removed trace_id filter for general log collection)
      # - name: grep
      #   match: kube.*
      #   regex: log trace_id
      
      # Modify records to add structured fields
      - name: modify
        match: kube.*
        add: cluster local
        add: source fluent-bit
    
    # Output configuration - send to Loki
    outputs:
      - name: loki
        match: "*"
        host: loki.observability.svc.cluster.local
        port: 3100
        labels: job=fluent-bit,cluster=local
        label_keys: $kubernetes['namespace_name'],$kubernetes['pod_name'],$kubernetes['container_name'],$kubernetes['labels']['app']
        remove_keys: kubernetes,docker
        line_format: json
        auto_kubernetes_labels: "On"
    
    # Custom parsers
    parsers:
      - name: docker
        format: json
        time_key: time
        time_format: "%Y-%m-%dT%H:%M:%S.%L"
        time_keep: "On"
        decode_field_as: escaped_utf8 log
      
      - name: json
        format: json
        time_key: timestamp
        time_format: "%Y-%m-%dT%H:%M:%S.%L"
        time_keep: "On"
  
  # Resource configuration
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  # Volume mounts for log collection
  volumeMounts:
    - name: varlog
      mountPath: /var/log
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: etcmachineid
      mountPath: /etc/machine-id
      readOnly: true
  
  # Volumes
  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - name: etcmachineid
      hostPath:
        path: /etc/machine-id
        type: File
  
  # Tolerations for DaemonSet to run on all nodes
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
  
  # Node selector
  nodeSelector: {}
  
  # Affinity
  affinity: {}

# Monitoring and health checks
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false
    namespace: observability
    interval: 30s
    path: /metrics
