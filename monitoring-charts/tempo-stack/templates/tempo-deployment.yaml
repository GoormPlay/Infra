{{- if .Values.tempo.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tempo-stack.fullname" . }}-tempo
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "tempo-stack.tempo.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tempo-stack.tempo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/tempo-configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tempo-stack.tempo.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
        - name: tempo
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.tempo.image.repository }}:{{ .Values.tempo.image.tag }}"
          imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
          args:
            - -config.file=/etc/tempo/tempo.yaml
            - -storage.trace.backend={{ .Values.tempo.storage.backend }}
          ports:
            - name: http
              containerPort: {{ .Values.tempo.service.ports.http }}
              protocol: TCP
            - name: otlp-grpc
              containerPort: {{ index .Values.tempo.service.ports "otlp-grpc" }}
              protocol: TCP
            - name: otlp-http
              containerPort: {{ index .Values.tempo.service.ports "otlp-http" }}
              protocol: TCP
            - name: jaeger-grpc
              containerPort: {{ index .Values.tempo.service.ports "jaeger-grpc" }}
              protocol: TCP
            - name: jaeger-http
              containerPort: {{ index .Values.tempo.service.ports "jaeger-http" }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.tempo.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/tempo
              readOnly: true
            - name: storage
              mountPath: {{ .Values.tempo.storage.local.path }}
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "tempo-stack.fullname" . }}-tempo-config
        - name: storage
          {{- if .Values.tempo.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "tempo-stack.fullname" . }}-tempo-storage
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
